# Makefile –¥–ª—è –±—ã—Å—Ç—Ä–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ CB500F –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞

.PHONY: help build-base build-fast build-microsoft build-normal deploy test clean status logs

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
REGISTRY = klimdos
APP_NAME = cb500-monitor
BASE_NAME = cb500-base
NAMESPACE = cb500f

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN = \033[0;32m
YELLOW = \033[1;33m
BLUE = \033[0;34m
RED = \033[0;31m
NC = \033[0m # No Color

help: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É
	@echo "$(BLUE)CB500F Docker Build & Deploy Commands$(NC)"
	@echo ""
	@awk 'BEGIN {FS = ":.*?## "} /^[a-zA-Z_-]+:.*?## / {printf "$(GREEN)%-15s$(NC) %s\n", $$1, $$2}' $(MAKEFILE_LIST)

build-base: ## –°–æ–∑–¥–∞—Ç—å –±–∞–∑–æ–≤—ã–π –æ–±—Ä–∞–∑ (–æ–¥–∏–Ω —Ä–∞–∑)
	@echo "$(YELLOW)üî® –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑–æ–≤–æ–≥–æ –æ–±—Ä–∞–∑–∞...$(NC)"
	./fast-build.sh build-base
	@echo "$(GREEN)‚úÖ –ë–∞–∑–æ–≤—ã–π –æ–±—Ä–∞–∑ —Å–æ–∑–¥–∞–Ω$(NC)"

push-base: ## –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –±–∞–∑–æ–≤—ã–π –æ–±—Ä–∞–∑
	@echo "$(BLUE)üì§ –ü—É–±–ª–∏–∫–∞—Ü–∏—è –±–∞–∑–æ–≤–æ–≥–æ –æ–±—Ä–∞–∑–∞...$(NC)"
	./fast-build.sh push-base
	@echo "$(GREEN)‚úÖ –ë–∞–∑–æ–≤—ã–π –æ–±—Ä–∞–∑ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω$(NC)"

build-fast: ## –ë—ã—Å—Ç—Ä–∞—è —Å–±–æ—Ä–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
	@echo "$(GREEN)üöÄ –ë—ã—Å—Ç—Ä–∞—è —Å–±–æ—Ä–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...$(NC)"
	./fast-build.sh build-fast
	@echo "$(GREEN)‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å–æ–±—Ä–∞–Ω–æ$(NC)"

build-microsoft: ## –°–±–æ—Ä–∫–∞ —Å Microsoft Playwright –±–∞–∑–æ–π
	@echo "$(BLUE)üêß –°–±–æ—Ä–∫–∞ —Å Microsoft –±–∞–∑–æ–π...$(NC)"
	./fast-build.sh build-microsoft

build-normal: ## –û–±—ã—á–Ω–∞—è —Å–±–æ—Ä–∫–∞ (–º–µ–¥–ª–µ–Ω–Ω–æ)
	@echo "$(RED)üêå –û–±—ã—á–Ω–∞—è —Å–±–æ—Ä–∫–∞...$(NC)"
	./fast-build.sh build-normal

test: ## –°—Ä–∞–≤–Ω–∏—Ç—å –≤—Ä–µ–º—è —Å–±–æ—Ä–∫–∏ –≤—Å–µ—Ö –º–µ—Ç–æ–¥–æ–≤
	@echo "$(YELLOW)‚è±Ô∏è –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏...$(NC)"
	./fast-build.sh time-test

deploy: ## –î–µ–ø–ª–æ–π –≤ Kubernetes
	@echo "$(BLUE)üöÄ –î–µ–ø–ª–æ–π –≤ Kubernetes...$(NC)"
	kubectl set image cronjob/cb500-monitor monitor=$(REGISTRY)/$(APP_NAME):latest -n $(NAMESPACE)
	@echo "$(GREEN)‚úÖ –û–±—Ä–∞–∑ –æ–±–Ω–æ–≤–ª–µ–Ω –≤ Kubernetes$(NC)"

deploy-config: ## –ü—Ä–∏–º–µ–Ω–∏—Ç—å –≤—Å–µ –º–∞–Ω–∏—Ñ–µ—Å—Ç—ã Kubernetes
	@echo "$(BLUE)‚öôÔ∏è –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Kubernetes...$(NC)"
	kubectl apply -f k8s/
	@echo "$(GREEN)‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∞$(NC)"

status: ## –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –≤ Kubernetes
	@echo "$(BLUE)üìä –°—Ç–∞—Ç—É—Å –≤ Kubernetes:$(NC)"
	@echo ""
	@echo "$(YELLOW)Pods:$(NC)"
	kubectl get pods -n $(NAMESPACE)
	@echo ""
	@echo "$(YELLOW)CronJobs:$(NC)"
	kubectl get cronjobs -n $(NAMESPACE)
	@echo ""
	@echo "$(YELLOW)Recent Jobs:$(NC)"
	kubectl get jobs -n $(NAMESPACE) --sort-by=.metadata.creationTimestamp | tail -5

logs: ## –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ª–æ–≥–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–π –∑–∞–¥–∞—á–∏
	@echo "$(BLUE)üìù –õ–æ–≥–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–π –∑–∞–¥–∞—á–∏:$(NC)"
	@POD=$$(kubectl get pods -n $(NAMESPACE) -l job-name --sort-by=.metadata.creationTimestamp -o jsonpath='{.items[-1].metadata.name}' 2>/dev/null); \
	if [ -n "$$POD" ]; then \
		kubectl logs $$POD -n $(NAMESPACE); \
	else \
		echo "$(RED)‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á$(NC)"; \
	fi

test-run: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞–¥–∞—á—É
	@echo "$(YELLOW)üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤–æ–π –∑–∞–¥–∞—á–∏...$(NC)"
	kubectl create job test-monitor-$$(date +%s) --from=cronjob/cb500-monitor -n $(NAMESPACE)
	@echo "$(GREEN)‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è –∑–∞–¥–∞—á–∞ —Å–æ–∑–¥–∞–Ω–∞$(NC)"

debug-db: ## –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
	@echo "$(BLUE)üîç –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:$(NC)"
	@POD=$$(kubectl get pods -n $(NAMESPACE) -l app=cb500-monitor --field-selector=status.phase=Running -o jsonpath='{.items[0].metadata.name}' 2>/dev/null); \
	if [ -n "$$POD" ]; then \
		kubectl exec $$POD -n $(NAMESPACE) -- python /app/view_database.py /app/data/current_state.json; \
	else \
		echo "$(RED)‚ùå –ù–µ—Ç –∑–∞–ø—É—â–µ–Ω–Ω—ã—Ö –ø–æ–¥–æ–≤$(NC)"; \
	fi

verbose-on: ## –í–∫–ª—é—á–∏—Ç—å –¥–µ—Ç–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
	@echo "$(YELLOW)üîç –í–∫–ª—é—á–µ–Ω–∏–µ verbose –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è...$(NC)"
	kubectl patch configmap cb500-monitor-config -n $(NAMESPACE) --patch '{"data":{"VERBOSE_LOGGING":"true"}}'
	@echo "$(GREEN)‚úÖ Verbose –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–∫–ª—é—á–µ–Ω–æ$(NC)"

verbose-off: ## –í—ã–∫–ª—é—á–∏—Ç—å –¥–µ—Ç–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
	@echo "$(BLUE)üîá –í—ã–∫–ª—é—á–µ–Ω–∏–µ verbose –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è...$(NC)"
	kubectl patch configmap cb500-monitor-config -n $(NAMESPACE) --patch '{"data":{"VERBOSE_LOGGING":"false"}}'
	@echo "$(GREEN)‚úÖ Verbose –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—ã–∫–ª—é—á–µ–Ω–æ$(NC)"

days-7: ## –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–æ–∏—Å–∫ –∑–∞ 7 –¥–Ω–µ–π
	@echo "$(YELLOW)üìÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–æ–∏—Å–∫–∞ –∑–∞ 7 –¥–Ω–µ–π...$(NC)"
	kubectl patch configmap cb500-monitor-config -n $(NAMESPACE) --patch '{"data":{"DAYS_SINCE_LISTED":"7"}}'
	@echo "$(GREEN)‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–∏—Å–∫ –∑–∞ 7 –¥–Ω–µ–π$(NC)"

days-14: ## –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–æ–∏—Å–∫ –∑–∞ 14 –¥–Ω–µ–π
	@echo "$(YELLOW)üìÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–æ–∏—Å–∫–∞ –∑–∞ 14 –¥–Ω–µ–π...$(NC)"
	kubectl patch configmap cb500-monitor-config -n $(NAMESPACE) --patch '{"data":{"DAYS_SINCE_LISTED":"14"}}'
	@echo "$(GREEN)‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–∏—Å–∫ –∑–∞ 14 –¥–Ω–µ–π$(NC)"

days-30: ## –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–æ–∏—Å–∫ –∑–∞ 30 –¥–Ω–µ–π
	@echo "$(YELLOW)üìÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–æ–∏—Å–∫–∞ –∑–∞ 30 –¥–Ω–µ–π...$(NC)"
	kubectl patch configmap cb500-monitor-config -n $(NAMESPACE) --patch '{"data":{"DAYS_SINCE_LISTED":"30"}}'
	@echo "$(GREEN)‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–∏—Å–∫ –∑–∞ 30 –¥–Ω–µ–π$(NC)"

clean: ## –û—á–∏—Å—Ç–∏—Ç—å –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ Docker –æ–±—Ä–∞–∑—ã
	@echo "$(YELLOW)üßπ –û—á–∏—Å—Ç–∫–∞ Docker...$(NC)"
	docker system prune -f
	@echo "$(GREEN)‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞$(NC)"

setup: ## –ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ (—Å–æ–∑–¥–∞—Ç—å –±–∞–∑—É + —Å–æ–±—Ä–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ)
	@echo "$(BLUE)üöÄ –ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞...$(NC)"
	$(MAKE) build-base
	$(MAKE) push-base
	$(MAKE) build-fast
	$(MAKE) deploy-config
	@echo "$(GREEN)‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!$(NC)"

dev: ## –†–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ (–±—ã—Å—Ç—Ä–∞—è —Å–±–æ—Ä–∫–∞ + –¥–µ–ø–ª–æ–π)
	@echo "$(GREEN)üë®‚Äçüíª –†–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏...$(NC)"
	$(MAKE) build-fast
	$(MAKE) deploy
	@echo "$(GREEN)‚úÖ –ì–æ—Ç–æ–≤–æ –∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é!$(NC)"

info: ## –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ–µ–∫—Ç–µ
	@echo "$(BLUE)üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–µ–∫—Ç–µ CB500F:$(NC)"
	@echo ""
	@echo "$(YELLOW)Docker –æ–±—Ä–∞–∑—ã:$(NC)"
	@docker images | grep -E "($(REGISTRY)/$(APP_NAME)|$(REGISTRY)/$(BASE_NAME))" || echo "–ù–µ—Ç –ª–æ–∫–∞–ª—å–Ω—ã—Ö –æ–±—Ä–∞–∑–æ–≤"
	@echo ""
	@echo "$(YELLOW)Kubernetes —Ä–µ—Å—É—Ä—Å—ã:$(NC)"
	@kubectl get all -n $(NAMESPACE) 2>/dev/null || echo "Namespace –Ω–µ –Ω–∞–π–¥–µ–Ω"
	@echo ""
	@echo "$(YELLOW)–ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:$(NC)"
	@echo "  make dev           - –ë—ã—Å—Ç—Ä–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞"
	@echo "  make test-run      - –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç"
	@echo "  make logs          - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ª–æ–≥–∏"
	@echo "  make debug-db      - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –±–∞–∑—É"

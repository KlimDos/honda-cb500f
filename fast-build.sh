#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±—ã—Å—Ç—Ä–æ–π —Å–±–æ—Ä–∫–æ–π Docker –æ–±—Ä–∞–∑–æ–≤
# –°–¢–†–ê–¢–ï–ì–ò–ò –£–°–ö–û–†–ï–ù–ò–Ø –ë–ò–õ–î–ê

set -e

REGISTRY="klimdos"
APP_NAME="cb500-monitor"
BASE_NAME="cb500-base"

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

print_help() {
    echo -e "${BLUE}–°–∫—Ä–∏–ø—Ç –¥–ª—è –±—ã—Å—Ç—Ä–æ–π —Å–±–æ—Ä–∫–∏ CB500 –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞${NC}"
    echo ""
    echo "–ö–û–ú–ê–ù–î–´:"
    echo "  build-base      - –°–æ–∑–¥–∞—Ç—å –±–∞–∑–æ–≤—ã–π –æ–±—Ä–∞–∑ (–æ–¥–∏–Ω —Ä–∞–∑)"
    echo "  build-fast      - –ë—ã—Å—Ç—Ä–∞—è —Å–±–æ—Ä–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"
    echo "  build-microsoft - –°–±–æ—Ä–∫–∞ –Ω–∞ –±–∞–∑–µ Microsoft Playwright"
    echo "  build-normal    - –û–±—ã—á–Ω–∞—è —Å–±–æ—Ä–∫–∞ (–º–µ–¥–ª–µ–Ω–Ω–æ)"
    echo "  push-base       - –ó–∞–ø—É—à–∏—Ç—å –±–∞–∑–æ–≤—ã–π –æ–±—Ä–∞–∑"
    echo "  push-app        - –ó–∞–ø—É—à–∏—Ç—å –æ–±—Ä–∞–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"
    echo "  time-test       - –°—Ä–∞–≤–Ω–∏—Ç—å –≤—Ä–µ–º—è —Å–±–æ—Ä–∫–∏"
    echo ""
    echo "–ü–†–ò–ú–ï–†–´:"
    echo "  ./fast-build.sh build-base      # –û–¥–∏–Ω —Ä–∞–∑ —Å–æ–∑–¥–∞—Ç—å –±–∞–∑—É"
    echo "  ./fast-build.sh build-fast      # –ë—ã—Å—Ç—Ä–∞—è —Å–±–æ—Ä–∫–∞"
    echo "  ./fast-build.sh time-test       # –°—Ä–∞–≤–Ω–∏—Ç—å —Å–∫–æ—Ä–æ—Å—Ç–∏"
}

build_base() {
    echo -e "${YELLOW}üî® –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑–æ–≤–æ–≥–æ –æ–±—Ä–∞–∑–∞ (–¥–µ–ª–∞–µ—Ç—Å—è –æ–¥–∏–Ω —Ä–∞–∑)...${NC}"
    echo "–≠—Ç–æ –∑–∞–π–º–µ—Ç 5-6 –º–∏–Ω—É—Ç, –Ω–æ –ø–æ—Ç–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –±—É–¥–µ—Ç —Å–æ–±–∏—Ä–∞—Ç—å—Å—è –∑–∞ 10-20 —Å–µ–∫—É–Ω–¥"
    
    docker build -f Dockerfile.base -t $REGISTRY/$BASE_NAME:latest .
    
    echo -e "${GREEN}‚úÖ –ë–∞–∑–æ–≤—ã–π –æ–±—Ä–∞–∑ —Å–æ–∑–¥–∞–Ω: $REGISTRY/$BASE_NAME:latest${NC}"
    echo "–†–∞–∑–º–µ—Ä –æ–±—Ä–∞–∑–∞:"
    docker images $REGISTRY/$BASE_NAME:latest
}

build_fast() {
    echo -e "${GREEN}üöÄ –ë—ã—Å—Ç—Ä–∞—è —Å–±–æ—Ä–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...${NC}"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –±–∞–∑–æ–≤–æ–≥–æ –æ–±—Ä–∞–∑–∞
    if ! docker images $REGISTRY/$BASE_NAME:latest | grep -q $BASE_NAME; then
        echo -e "${RED}‚ùå –ë–∞–∑–æ–≤—ã–π –æ–±—Ä–∞–∑ –Ω–µ –Ω–∞–π–¥–µ–Ω!${NC}"
        echo "–°–Ω–∞—á–∞–ª–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ: ./fast-build.sh build-base"
        exit 1
    fi
    
    start_time=$(date +%s)
    
    docker build -f Dockerfile.superfast -t $REGISTRY/$APP_NAME:latest .
    
    end_time=$(date +%s)
    duration=$((end_time - start_time))
    
    echo -e "${GREEN}‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å–æ–±—Ä–∞–Ω–æ –∑–∞ $duration —Å–µ–∫—É–Ω–¥!${NC}"
    docker images $REGISTRY/$APP_NAME:latest
}

build_microsoft() {
    echo -e "${BLUE}üêß –°–±–æ—Ä–∫–∞ –Ω–∞ –±–∞–∑–µ Microsoft Playwright –æ–±—Ä–∞–∑–∞...${NC}"
    
    start_time=$(date +%s)
    
    docker build -f Dockerfile.fast -t $REGISTRY/$APP_NAME:microsoft .
    
    end_time=$(date +%s)
    duration=$((end_time - start_time))
    
    echo -e "${GREEN}‚úÖ –°–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –∑–∞ $duration —Å–µ–∫—É–Ω–¥!${NC}"
    docker images $REGISTRY/$APP_NAME:microsoft
}

build_normal() {
    echo -e "${RED}üêå –û–±—ã—á–Ω–∞—è —Å–±–æ—Ä–∫–∞ (–º–µ–¥–ª–µ–Ω–Ω–æ)...${NC}"
    
    start_time=$(date +%s)
    
    docker build -f Dockerfile -t $REGISTRY/$APP_NAME:normal .
    
    end_time=$(date +%s)
    duration=$((end_time - start_time))
    
    echo -e "${YELLOW}‚è±Ô∏è –û–±—ã—á–Ω–∞—è —Å–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –∑–∞ $duration —Å–µ–∫—É–Ω–¥${NC}"
    docker images $REGISTRY/$APP_NAME:normal
}

push_base() {
    echo -e "${BLUE}üì§ –ü—É–±–ª–∏–∫–∞—Ü–∏—è –±–∞–∑–æ–≤–æ–≥–æ –æ–±—Ä–∞–∑–∞...${NC}"
    docker push $REGISTRY/$BASE_NAME:latest
    echo -e "${GREEN}‚úÖ –ë–∞–∑–æ–≤—ã–π –æ–±—Ä–∞–∑ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω${NC}"
}

push_app() {
    echo -e "${BLUE}üì§ –ü—É–±–ª–∏–∫–∞—Ü–∏—è –æ–±—Ä–∞–∑–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...${NC}"
    docker push $REGISTRY/$APP_NAME:latest
    echo -e "${GREEN}‚úÖ –û–±—Ä–∞–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω${NC}"
}

time_test() {
    echo -e "${YELLOW}‚è±Ô∏è –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ —Å–±–æ—Ä–∫–∏...${NC}"
    echo ""
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑–æ–≤—ã–π –æ–±—Ä–∞–∑
    if ! docker images $REGISTRY/$BASE_NAME:latest | grep -q $BASE_NAME; then
        echo -e "${YELLOW}–ë–∞–∑–æ–≤—ã–π –æ–±—Ä–∞–∑ –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º...${NC}"
        build_base
        echo ""
    fi
    
    echo -e "${GREEN}1. –¢–µ—Å—Ç –±—ã—Å—Ç—Ä–æ–π —Å–±–æ—Ä–∫–∏:${NC}"
    build_fast
    echo ""
    
    echo -e "${BLUE}2. –¢–µ—Å—Ç Microsoft Playwright:${NC}"
    build_microsoft
    echo ""
    
    echo -e "${RED}3. –¢–µ—Å—Ç –æ–±—ã—á–Ω–æ–π —Å–±–æ—Ä–∫–∏:${NC}"
    build_normal
    
    echo ""
    echo -e "${YELLOW}üìä –°–†–ê–í–ù–ï–ù–ò–ï –†–ê–ó–ú–ï–†–û–í:${NC}"
    docker images | grep cb500
}

# –ì–ª–∞–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
case "$1" in
    build-base)
        build_base
        ;;
    build-fast)
        build_fast
        ;;
    build-microsoft)
        build_microsoft
        ;;
    build-normal)
        build_normal
        ;;
    push-base)
        push_base
        ;;
    push-app)
        push_app
        ;;
    time-test)
        time_test
        ;;
    help|--help|-h)
        print_help
        ;;
    *)
        echo -e "${RED}‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: $1${NC}"
        echo ""
        print_help
        exit 1
        ;;
esac
